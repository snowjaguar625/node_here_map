extends ../../layout

block content
    title= title
    #content-padder 
    #content-real
        .ctrl-panel
            span#toggle-ctrl-panel.glyphicon.glyphicon-menu-left
            p
                | This demo presents the Waypoints Sequence Extension calculating the best route through a sequence of waypoints (Traveling Salesman Problem).
                input#more.btn.btn-default.btn-xs(type='button' value='more' onclick='detailsSelect();')
            #detaildesc.details(style='display: none')
                p
                    | The shortest distance or the shortest travel time can be targeted. When the sequence
                    br
                    | is computed traffic information can be taken into account.
                    br
                    | The waypoints can be entered as coordinates or addresses in the text area below, or after
                    br
                    | &apos;Add coordinates..&apos; is checked coordinates can be added by clicking into the map.
                p
                    | Enter one waypoint per line, with an optional unique Id and a location (coordinates or address).
                    br
                    | The accepted formats are
                    br
                    b &quot;text-id;latitude,longitude&quot;
                    |  or
                    br
                    b &quot;text-id;{address}&quot;
                    |  or
                    br
                    b &quot;latitude,longitude&quot;
                    |  or
                    br
                    b &quot;{address}&quot;
                    br
                    | Optionally constraints can be added to a waypoint, e.g.
                    br
                    b &quot;text-id;latitude,longitude{constraint}&quot;
                    br
                    | Types of constraint are: appointments(at), access hours(acc), service time(st), e.g.
                    br
                    b &quot;acc:mo12:00:00+01:00|mo18:00:00+01:00;st:900&quot;
                    | .
                    br
                    | The triple of id, latitude and longitude must not contain characters
                    br
                    | other than a-z,A-Z,0-9,full stop as decimal separator(.) and the delimiters.
                    br
                    | The first point is the start point. If &quot;Last point in list is final destination&quot;
                    br
                    | is checked, the route ends at the last waypoint in the list.
                p
                    | To create 
                    b round trips
                    |  the first and the last point must share the same coordinates
                    br
                    | but have different IDs.
                    br
                    | As usage of traffic information and handling of temporal constraint require a departure time,
                    br
                    | this time must be provided always in this demo.
                p
                    | To provide custom 
                    b Rest Times
                    |  four time periods in seconds must be provided:
                    br
                    | a short driving phase, a short rest, a long driving phase and a long rest.
                    br
                    | It needs to be defined if service times at a waypoint is 
                    b rest
                    | ing or 
                    b work
                    | ing time.
                    br
                    | The default are simplified European rest times.
                p
                    | Please find the detailed description of all parameters in the
                    a(href='https://developer.here.com/platform-extensions' target='_blank') service documentation
                    | .
            hr.separator
            .form-horizontal
                .form-group
                    label.control-label.col-sm-4(for='environment') Endpoint:
                    .col-sm-8
                        input#endpoint(type='text' size='33' value='https://wse.api.here.com' placeholder='URL with http or https and host' list='environments')
                .form-group
                    label.control-label.col-sm-4(for='exampleSelector') Predefined examples:
                    .col-sm-8
                        select#exampleSelector.form-control(onchange='exampleSelect(this)')
                            option(value='ex0' selected='true') None
                            option(value='ex1') Ruhrdistrict round trip without constraints
                            option(value='ex2') Ruhrdistrict round trip with A before B
                            option(value='ex3') Ruhrdistrict round trip with access hours
                            option(value='ex4') Disneyland, Paris trip without constraints
                            option(value='ex5') Disneyland, Paris: filling a time gap
                            option(value='ex6') European Capitals: mixed input formats
                            option(value='ex7') Frankfurt Downtown Pedestrian Example
                            option(value='ex8') Frankfurt Airport Area Pedestrian Example
                            option(value='ex9') Frankfurt Area
                .form-group
                    label.col-sm-4(for='exampleSelector') Destinations:(TextID;Lat,Lng)
                    .col-sm-8
                        textarea#destinations.form-control(rows='8' placeholder='(ID;)address or Lat,Long(;constraints)')
                        .checkbox
                            label
                                input#addCoords(type='checkbox' value='on')
                                | Add coordinates by clicking into the map
                        .checkbox
                            label
                                input#useEnding(type='checkbox' value='on' checked='')
                                | Last point in list is final destination
                .form-group
                    label.control-label.col-sm-4(for='improveFor') Optimize for:
                    .col-sm-8
                        select#improveFor.form-control
                            option(value='TIME' selected='true') time
                            option(value='DISTANCE') distance
                            option(value='NONE') Don&apos;t optimize, show input order
                .form-group
                    label.control-label.col-sm-4(for='improveFor') Vehicle:
                    .col-sm-8
                        select#vehicleType.form-control(onchange='truckSelect();')
                            option(value='car' selected='true') car
                            option(value='truck') truck
                            option(value='pedestrian') pedestrian
                        #truckRestDiv.checkbox.input-details
                            label
                                input#truckrestr(type='checkbox' value='on' checked='checked' onchange='truckSelect();')
                                | Display truck restrictions
            #vehicleDetails.form-horizontal.input-details
                hr.separator
                h5 Truck Attributes:
                .form-group
                    .col-sm-4
                        label.control-label(for='height') Height [m]
                    .col-sm-8
                        input#height.form-control(type='text' size='8' value='3.80' pattern='[0-9]*\.?[0-9]*')
                .form-group
                    .col-sm-4
                        label.control-label(for='width') Width [m]
                    .col-sm-8
                        input#width.form-control(type='text' size='8' value='2.30' pattern='[0-9]*\.?[0-9]*')
                .form-group
                    .col-sm-4
                        label.control-label(for='length') Length [m]
                    .col-sm-8
                        input#length.form-control(type='text' size='8' value='8.35' pattern='[0-9]*\.?[0-9]*')
                .form-group
                    .col-sm-4
                        label.control-label(for='limitedWeight') Limited Weight [t]
                    .col-sm-8
                        input#limitedWeight.form-control(type='text' size='8' value='18' pattern='[0-9]*\.?[0-9]*')
                .form-group
                    .col-sm-4
                        label.control-label(for='weightPerAxle') Weight Per Axle [t]
                    .col-sm-8
                        input#weightPerAxle.form-control(type='text' size='8' value='10' pattern='[0-9]*\.?[0-9]*')
                .form-group
                    .col-sm-4
                        label.control-label(for='hasTrailer') Trailer
                    .col-sm-8
                        input#hasTrailer(type='checkbox')
                hr.separator
                h5 Shipped Hazardous Goods
                .form-group
                    .checkbox.col-sm-3
                        label
                            input#explosive(type='checkbox')
                            | explosive
                    .checkbox.col-sm-3
                        label
                            input#gas(type='checkbox')
                            | gas
                    .checkbox.col-sm-3
                        label
                            input#flammable(type='checkbox')
                            | flammable
                    .checkbox.col-sm-3
                        label
                            input#combustible(type='checkbox')
                            | combustible
                    .checkbox.col-sm-3
                        label
                            input#organic(type='checkbox')
                            | organic
                    .checkbox.col-sm-3
                        label
                            input#poison(type='checkbox')
                            | poison
                    .checkbox.col-sm-3
                        label
                            input#radioActive(type='checkbox')
                            | radioactive
                    .checkbox.col-sm-3
                        label
                            input#corrosive(type='checkbox')
                            | corrosive
                    .checkbox.col-sm-3
                        label
                            input#poisonousInhalation(type='checkbox')
                            | poisonous Inh.
                    .checkbox.col-sm-3
                        label
                            input#harmfulToWater(type='checkbox')
                            | water harm.
                    .checkbox.col-sm-3
                        label
                            input#other(type='checkbox')
                            | other
                hr.separator
            .form-horizontal
                .form-group
                    .col-sm-4
                        label.control-label(for='traffic') Traffic-aware routing:
                    .col-sm-8
                        select#traffic.form-control
                            option(value='enabled') enabled
                            option(value='disabled' selected='true') disabled
                .form-group
                    .col-sm-4
                        label.control-label(for='traffic') Departure Date and Time:
                    .col-sm-8
                        .form-inline
                            input#departureDate.form-control.col-sm-6(type='text' value='2016-10-14' placeholder='YYYY-MM-DD' size='12' pattern='^(19|20)\d\d[-](0[1-9]|1[012])[-](0[1-9]|[12][0-9]|3[01])$' title='Date with YYYY-MM-DD')
                            input#departureTime.form-control.col-sm-6(type='text' value='08:30:00' placeholder='HH:MM:SS' size='12' pattern='^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$' title='Time with HH:MM:SS')
                            br
                        div
                            br
                            | (timezone of webbrowser, DST from given date)
                .form-group
                    .col-sm-4
                        label.control-label(for='rest-selector') Rest times:
                    .col-sm-8
                        select#rest-selector.form-control(onchange='restSelect()')
                            option(value='default') default
                            option(value='custom') custom
                            option(value='disabled' selected='true') disabled
                        .checkbox
                            label
                                input#showwaypointdetail(type='checkbox' value='on' checked='checked')
                                | Show waypoint details
                        .checkbox
                            label
                                input#keepPrevious(type='checkbox' value='on')
                                | Keep previous route on display
                        #endpointDetails.endpoint-details
                            b Custom Config:
                            #serverendpoint
                    .col-sm-4
                        label.control-label(for='add-params') Additional:
                    .col-sm-8
                        input#additional(type='text' size='42' value='' placeholder='&other=parameters&...')
                #custom-rest-times.form-group
                    .col-sm-4
                        label.control-label Custom rest times:
                    .col-sm-8
                        .form-inline
                            input#rest-custom-durations.resttime-details.form-control(onchange='restSelect()' size='22' type='text' value='16200,2700,32400,39600' placeholder='drive1,rest1,drive2,rest2' pattern='^(\d+,\d+,\d+,\d+)$' title='driving and resting durations')
                            select#rest-custom-serviceTimes.resttime-details.form-control(onchange='restSelect()')
                                option(value='rest') rest
                                option(value='work' selected='true') work
            .form-group
                input#start.btn.btn-default.btn-sm(type='button' value='Calculate' onclick='startOptimize()')
            hr.separator
            .form-group
                #feedbackTxt
        style.
            #notecontent a {
            color : white;
            }
            #notecontent a:hover {
            color : red;
            }
            details {
            display: none
            }
            .input-details {
            display: none
            }
            .endpoint-details {
            display: none
            }
            #custom-rest-times {
            display: none
            }
            table td, table td * {
            vertical-align: top;
            }
            textarea {
            white-space: pre;
            word-wrap: normal;
            overflow: scroll;
            }
            ul.timeline {
            width: 400px;
            font-size: x-small;
            list-style-position: inside;
            padding: 0;
            vertical-align: middle;
            font-weight: bold;
            }
            ul.timeline li {
            }
            li.accStarts, li.accEnds {
            color: #59b354;
            }
            li.stStarts, li.stEnds {
            color: #1b5fcc;
            }
            li.arr {
            color: red;
            }
            li.dep {
            color: white;
            }
            li.at {
            color: yellow;
            }
            li.before {
            color: orange;
            }
            .cont-time {
            z-index: 999;
            float: left;
            height: 21px;
            padding: 7px 10px 1px 5px;
            font-family: Arial,Helvetica,sans-serif;
            font-weight: bold;
            font-size: 10px;
            display: none;
            }
            .menubkg {
            background-color: #f8f8f8;
            border-radius: 15px;
            color: black;
            }
            .menubkg select {
            font-size: 10px;
            vertical-align: middle;
            }
            .menubkg select option:checked {
            background-color: #999;
            }
            .tselect {
            background-image: url(/assets/examples/traffic_timebw30x34s.png);
            width: 30px;
            height: 34px;
            margin-top: 2px;
            display: block;
            z-index: 999;
            float: left;
            cursor: pointer;
            text-decoration: none;
            }
            .cursorPointer {
            cursor: pointer;
            }
        #mapContainer
            .ctrl-time
                .cont-time.menubkg
                    label(for='dOfWeek') Day of week: 
                    select#dOfWeek.nvt_select(name='')
                        option(value='0') Sunday
                        option(value='1') Monday
                        option(value='2') Tuesday
                        option(value='3') Wednesday
                        option(value='4') Thursday
                        option(value='5') Friday
                        option(value='6') Saturday
                    span &nbsp;&nbsp;
                    label(for='hour') Time: 
                    select#hour.nvt_select(name='')
                        option(value='0') 0
                        option(value='1') 1
                        option(value='2') 2
                        option(value='3') 3
                        option(value='4') 4
                        option(value='5') 5
                        option(value='6') 6
                        option(value='7') 7
                        option(value='8') 8
                        option(value='9') 9
                        option(value='10') 10
                        option(value='11') 11
                        option(value='12') 12
                        option(value='13') 13
                        option(value='14') 14
                        option(value='15') 15
                        option(value='16') 16
                        option(value='17') 17
                        option(value='18') 18
                        option(value='19') 19
                        option(value='20') 20
                        option(value='21') 21
                        option(value='22') 22
                        option(value='23') 23
                    span :
                    select#minutes.nvt_select(name='')
                        option(value='00') 00
                        option(value='10') 10
                        option(value='20') 20
                        option(value='30') 30
                        option(value='40') 40
                        option(value='50') 50
                a.button.trafficTimeBtn.tselect
    script(src='/javascripts/examples/v31/waypoint_sequence_extension.js')