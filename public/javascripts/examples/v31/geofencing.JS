/*
	author domschuette
	(C) HERE 2014
	*/


	// check if the site was loaded via secure connection
	var secure = (location.protocol === 'https:') ? true : false;

	// Create a platform object to communicate with the HERE REST APIs
	var platform = new H.service.Platform({
		apikey: api_key,
		useHTTPS: secure
	}),
	maptypes = platform.createDefaultLayers();

	// Instantiate a map in the 'map' div, set the base map to normal
	var map = new H.Map(document.getElementById('mapContainer'), maptypes.vector.normal.map, {
		center: new H.geo.Point(52.51, 13.45),
		zoom: 11,
		pixelRatio: window.devicePixelRatio || 1
	});

	// Do not draw under control panel
	map.getViewPort().setPadding(0, 0, 0, $('.ctrl-panel').width());

	// Enable the map event system
	var mapevents = new H.mapevents.MapEvents(map);

	// Enable map interaction (pan, zoom, pinch-to-zoom)
	var behavior = new H.mapevents.Behavior(mapevents);

	// Enable the default UI
	var ui = H.ui.UI.createDefault(map, maptypes);

	//add JS API Release information
	releaseInfoTxt.innerHTML+="JS API: 3."+ H.buildInfo().version;

	//add MRS Release information
	loadMRSVersionTxt();


	window.addEventListener('resize', function() { map.getViewPort().resize(); });

	var routeArr = [52.53805, 13.4205, 52.53765, 13.42156, 52.53811, 13.42188, 52.53862, 13.42232, 52.53929, 13.42283, 52.53921, 13.42333, 52.53908, 13.42406, 52.53902, 13.4243, 52.53896, 13.4245, 52.53888, 13.42469, 52.5388, 13.42493, 52.53873, 13.42511, 52.53867, 13.42528, 52.53867, 13.42529, 52.53855, 13.42563, 52.53849, 13.42582, 52.53846, 13.42594, 52.53843, 13.42604, 52.53837, 13.4262, 52.53833, 13.42634, 52.53811, 13.427, 52.53791, 13.4276, 52.53766, 13.4283, 52.53752, 13.42868, 52.53733, 13.42931, 52.53709, 13.42996, 52.53662, 13.43133, 52.53613, 13.43275, 52.53601, 13.43305, 52.53569, 13.43384, 52.53542, 13.4344, 52.53475, 13.43576, 52.53429, 13.43667, 52.53402, 13.43727, 52.53333, 13.43876, 52.53206, 13.44128, 52.53198, 13.44142, 52.53177, 13.44167, 52.53142, 13.44204, 52.53118, 13.4423, 52.53029, 13.44325, 52.52946, 13.44411, 52.52956, 13.44444, 52.53017, 13.44612, 52.53058, 13.44723, 52.53056, 13.44727, 52.53007, 13.44781, 52.52989, 13.448, 52.52968, 13.44821, 52.52878, 13.44914, 52.52804, 13.44997, 52.52738, 13.45069, 52.52719, 13.45082, 52.52698, 13.45096, 52.52736, 13.45238, 52.52627, 13.45313, 52.5265, 13.45408, 52.52689, 13.45563, 52.52714, 13.45654, 52.52611, 13.45753, 52.52601, 13.45763, 52.52557, 13.45817, 52.52551, 13.45825, 52.52544, 13.45835, 52.52538, 13.45848, 52.52529, 13.45867, 52.52497, 13.4594, 52.52484, 13.4597, 52.52476, 13.45995, 52.52467, 13.4602, 52.52458, 13.46049, 52.5244, 13.46108, 52.52366, 13.46423, 52.52361, 13.46449, 52.52311, 13.46679, 52.52304, 13.46714, 52.52296, 13.4674, 52.52287, 13.46774, 52.52282, 13.46788, 52.5227, 13.4682, 52.5226, 13.46841, 52.5225, 13.46858, 52.52243, 13.46867, 52.52195, 13.46916, 52.52188, 13.46924, 52.5218, 13.46929, 52.52168, 13.46937, 52.52157, 13.46942, 52.52144, 13.46945, 52.52132, 13.46949, 52.52041, 13.46955, 52.51981, 13.46995, 52.51834, 13.47097, 52.51713, 13.47181, 52.51691, 13.47196, 52.51606, 13.47256, 52.51591, 13.47267, 52.51492, 13.47338, 52.51465, 13.47338, 52.51398, 13.47338, 52.51391, 13.47338, 52.51378, 13.47336, 52.51368, 13.47333, 52.51225, 13.47286, 52.51213, 13.47281, 52.51082, 13.47144, 52.51025, 13.47085, 52.50884, 13.46935, 52.50782, 13.4718, 52.50642, 13.47047, 52.5062, 13.47029, 52.50616, 13.47036, 52.50614, 13.47041, 52.50612, 13.47044, 52.50601, 13.47054, 52.50583, 13.47072, 52.50554, 13.47099, 52.50546, 13.47105, 52.50539, 13.47112, 52.50517, 13.47132, 52.50451, 13.47194, 52.50422, 13.47219, 52.50382, 13.47249, 52.50344, 13.47279, 52.50327, 13.47296, 52.50322, 13.47301, 52.50318, 13.47311, 52.50315, 13.47324, 52.5031, 13.47353, 52.50275, 13.47529, 52.50274, 13.47533, 52.50274, 13.47538, 52.50273, 13.47542, 52.5027, 13.47546, 52.50268, 13.47548, 52.50274, 13.47562, 52.50274, 13.47582, 52.50276, 13.47647, 52.50283, 13.47799, 52.50288, 13.47933, 52.5031, 13.48069, 52.50317, 13.48107, 52.50265, 13.48129, 52.50251, 13.48133, 52.50204, 13.48145, 52.5019, 13.47958],
	strip = new H.geo.LineString(),
	strip2 = new H.geo.LineString(),
	isoStrip = new H.geo.LineString(),
	// routeArr2 = [52.6035305,13.2727806,52.6038373,13.272053,52.6050711,13.2699931,52.6055431,13.2690811,52.6057899,13.2684374,52.6062083,13.2671177,52.6070344,13.2644141,52.6070881,13.2641888,52.6076996,13.2622147,52.6081717,13.2609165,52.6121199,13.2508206,52.6122057,13.2505846,52.6127207,13.2495868,52.6129675,13.2491469,52.6131499,13.2488894,52.613343,13.2486534,52.6136112,13.2483745,52.6140511,13.2480955,52.6142871,13.2480204,52.6145339,13.2479668,52.6145339,13.2478058,52.6145339,13.2476771,52.6145339,13.2475162,52.6144266,13.2475269,52.6140726,13.2476449,52.613858,13.2477736,52.6136541,13.2479239,52.613461,13.2481062,52.6129782,13.2486212,52.6127636,13.2489109,52.6124954,13.2494366,52.6123881,13.2497048,52.6121843,13.2503378,52.6119268,13.2509708,52.6105106,13.254683,52.6080966,13.2608414,52.6074207,13.2628584,52.6060152,13.2675147,52.6056933,13.2684052,52.6052642,13.2693708,52.6049852,13.2698858,52.6041591,13.2712913,52.6037836,13.2719779,52.6035798,13.2724071,52.6033115,13.2731366,52.6031506,13.2736409,52.6030004,13.274188,52.6028717,13.2747138,52.6025391,13.2763016,52.6023996,13.2768595,52.6022387,13.2773745,52.6019382,13.2782006,52.6016593,13.2788444,52.6012838,13.2795632,52.601037,13.2799494,52.6004469,13.2807648,52.60005,13.2811725,52.599653,13.2815373,52.5985479,13.2825029,52.5979578,13.2831037,52.5975287,13.2835865,52.5969601,13.2841766,52.5965095,13.2845843,52.5962842,13.2847559,52.5956726,13.2851851,52.5938916,13.2862258,52.593044,13.2867408,52.5902224,13.2887149,52.5895572,13.2891548,52.5869715,13.2909465,52.5857162,13.2918477,52.5841069,13.2929099,52.5805664,13.2953238,52.5796115,13.2959247,52.5790322,13.2963753,52.578721,13.2966435,52.5781202,13.2972872,52.5774121,13.2982635,52.5771546,13.2987034,52.5768006,13.2993793,52.5764251,13.3001947,52.5753736,13.3023727,52.5749338,13.3031988,52.5745368,13.3037996,52.5743973,13.303982,52.5740325,13.3044004,52.5736248,13.3047652,52.5732815,13.3050442,52.5731099,13.30513,52.5725949,13.3053339,52.5721443,13.3054411,52.5714147,13.3055484,52.5704169,13.3055055,52.5698805,13.3054948,52.5695372,13.3055055,52.5692046,13.3055592,52.5689578,13.3055806,52.5687325,13.305645,52.5684428,13.3057952,52.5681853,13.3059025,52.5677776,13.3061385,52.5675631,13.3062994,52.5671017,13.3068037,52.5668335,13.3071256,52.566576,13.3074689,52.56634,13.3078551,52.5659966,13.3084881,52.5658035,13.3089495,52.5655246,13.3097112,52.5652349,13.310709,52.5639153,13.315537,52.5635934,13.316642,52.5633252,13.3176398,52.5628746,13.3191526,52.5625527,13.3200967,52.5622952,13.3207834,52.5621128,13.3211696,52.5620055,13.3213305,52.5618875,13.32147,52.5617695,13.3215773,52.5616407,13.3216631,52.5614583,13.3216953,52.5613296,13.3216953,52.560879,13.321631,52.5607288,13.3216631,52.5605571,13.3217168,52.5604391,13.3218563,52.5606,13.3231544,52.5608146,13.3244956,52.5609112,13.3248281,52.5610507,13.3252037,52.5612438,13.3256328,52.5615978,13.3261049,52.5617158,13.3262229,52.5619304,13.3263731,52.562263,13.3265555,52.5625527,13.3267164,52.5624561,13.3269954,52.5622952,13.3298707,52.5623059,13.3301389,52.5623381,13.3302677,52.5624239,13.3304822,52.5624776,13.3305895,52.561909,13.3316517,52.5617373,13.3319628,52.5601065,13.3348167,52.5533581,13.3468008,52.5520062,13.3491611,52.5508153,13.3511674,52.5505257,13.3517146,52.5504398,13.3518648,52.5503433,13.3521116,52.5504076,13.3522618,52.5518024,13.3549225,52.5525105,13.3563602,52.5551498,13.3613706,52.556684,13.3643854,52.5567484,13.3646321,52.5568128,13.3655012,52.5569952,13.3674753,52.5570166,13.3680117,52.5569415,13.3692133,52.5566733,13.3725178,52.5565553,13.3738911,52.5562334,13.3742666,52.5538087,13.3770132,52.5536799,13.3771849,52.5534332,13.3776248,52.5532079,13.3780646,52.5530469,13.3784616,52.5528967,13.379159,52.5528216,13.3796847,52.5527143,13.3802104,52.5518239,13.3824205,52.5516307,13.382839,52.5514913,13.3831072,52.5506008,13.3845878,52.5496566,13.3860791,52.5489807,13.3873022,52.5487447,13.3877099,52.5486052,13.3879137,52.5482512,13.3882248,52.5436163,13.3917868,52.5425649,13.3926451,52.5416422,13.393321,52.5411057,13.3936858,52.5401294,13.3945334,52.5395393,13.3949947,52.5391531,13.3952737,52.5382626,13.3959281,52.5382948,13.3960783,52.5385308,13.397001,52.5395393,13.4005308,52.5398183,13.401593,52.5403333,13.4033203,52.54058,13.4042966,52.5406337,13.4045327,52.5412667,13.4079123,52.5413311,13.4083736,52.5413311,13.4086525,52.5410521,13.4119463,52.5410092,13.4123647,52.5409126,13.4131157,52.5408375,13.413384,52.540741,13.4139526,52.5405586,13.4147894,52.5397325,13.4201968,52.5394857,13.4215808,52.5381875,13.4201431,52.5380544,13.4205039,52.5380542,13.4205039,52.5381875,13.4201431,52.5394857,13.4215808,52.5393033,13.4228253,52.5390351,13.4242952,52.5389707,13.424499,52.538799,13.4249282,52.5384879,13.4258187,52.5384557,13.4259367,52.538445,13.4260547,52.538327,13.4263551,52.5381231,13.4269989,52.5371039,13.4299707,52.5361276,13.4327495,52.5360096,13.4330606,52.5362349,13.4333074,52.5366211,13.4337795,52.5381768,13.4355927,52.5396252,13.4372556,52.5405478,13.4383821,52.5411272,13.4390581,52.5406444,13.4404099,52.5375116,13.4487998,52.5372112,13.4494328,52.5368893,13.4497869,52.5368142,13.4499156,52.5360847,13.4506238,52.5345826,13.4521258,52.5338209,13.4528446,52.5317931,13.4548938,52.5311494,13.4554946,52.5307846,13.4558809,52.5304532,13.4562119,52.5303876,13.4562778,52.5302482,13.4563959,52.529465,13.4572005,52.5290251,13.457619,52.5287461,13.4577048,52.5285637,13.4578335,52.527523,13.4584343,52.5274158,13.4584773,52.5273621,13.4585631,52.5267076,13.4588313,52.5263536,13.4589493,52.5260639,13.4590995,52.5259244,13.4592175,52.5257099,13.4595501,52.525506,13.4600008,52.52527,13.4606659,52.5249267,13.461889,52.5247657,13.4625864,52.5241649,13.4662771,52.5240898,13.4666312,52.5239611,13.4671354,52.5235963,13.4682083,52.5233388,13.4692383,52.5232315,13.4698069,52.5231349,13.4704721,52.5230706,13.4712231,52.5229847,13.4728003,52.5229526,13.4751821,52.5229955,13.4779608,52.5230384,13.479495,52.5222659,13.4795594,52.5210428,13.4795809,52.5204313,13.4795594,52.5201309,13.4795916,52.5199056,13.4796453,52.5181782,13.4799671,52.5180602,13.4800208,52.5178671,13.4800315,52.5173414,13.48001,52.5171375,13.4799778,52.5170195,13.4799349,52.5169444,13.4798384,52.5168478,13.4797633,52.516644,13.479538,52.5163007,13.4792483,52.5138545,13.4772956,52.5135541,13.4770274,52.5134361,13.4769094,52.5132751,13.4767163,52.5126529,13.4761047,52.5122344,13.4757185,52.5121164,13.4756541,52.5118804,13.4754288,52.5093484,13.4731972,52.5078249,13.4718132,52.5063765,13.470515,52.5061727,13.4703326,52.5060868,13.4704399,52.5058293,13.4707189,52.5054002,13.4711266,52.5048637,13.4716523,52.5045097,13.4719741,52.503823,13.4725213,52.5033188,13.4728968,52.503233,13.4730148,52.5031149,13.473326,52.5027287,13.4752679,52.5026751,13.4754181,52.5027287,13.4756434,52.5027502,13.4758151,52.5028789,13.4793448,52.5031686,13.4810829,52.5026643,13.4812868,52.5025249,13.4813297,52.5020313,13.4814584,52.5020206,13.4813619,52.5018878,13.4795818, 52.6035305,13.2727806,52.6038373,13.272053,52.6050711,13.2699931,52.6055431,13.2690811,52.6057899,13.2684374,52.6062083,13.2671177,52.6070344,13.2644141,52.6070881,13.2641888,52.6076996,13.2622147,52.6081717,13.2609165,52.6121199,13.2508206,52.6122057,13.2505846,52.6127207,13.2495868,52.6129675,13.2491469,52.6131499,13.2488894,52.613343,13.2486534,52.6136112,13.2483745,52.6140511,13.2480955,52.6142871,13.2480204,52.6145339,13.2479668,52.6145339,13.2478058,52.6145339,13.2476771,52.6145339,13.2475162,52.6144266,13.2475269,52.6140726,13.2476449,52.613858,13.2477736,52.6136541,13.2479239,52.613461,13.2481062,52.6129782,13.2486212,52.6127636,13.2489109,52.6124954,13.2494366,52.6123881,13.2497048,52.6121843,13.2503378,52.6119268,13.2509708,52.6105106,13.254683,52.6080966,13.2608414,52.6074207,13.2628584,52.6060152,13.2675147,52.6056933,13.2684052,52.6052642,13.2693708,52.6049852,13.2698858,52.6041591,13.2712913,52.6037836,13.2719779,52.6035798,13.2724071,52.6033115,13.2731366,52.6031506,13.2736409,52.6030004,13.274188,52.6028717,13.2747138,52.6025391,13.2763016,52.6023996,13.2768595,52.6022387,13.2773745,52.6019382,13.2782006,52.6016593,13.2788444,52.6012838,13.2795632,52.601037,13.2799494,52.6004469,13.2807648,52.60005,13.2811725,52.599653,13.2815373,52.5985479,13.2825029,52.5979578,13.2831037,52.5975287,13.2835865,52.5969601,13.2841766,52.5965095,13.2845843,52.5962842,13.2847559,52.5956726,13.2851851,52.5938916,13.2862258,52.593044,13.2867408,52.5902224,13.2887149,52.5895572,13.2891548,52.5869715,13.2909465,52.5857162,13.2918477,52.5841069,13.2929099,52.5805664,13.2953238,52.5796115,13.2959247,52.5790322,13.2963753,52.578721,13.2966435,52.5781202,13.2972872,52.5774121,13.2982635,52.5771546,13.2987034,52.5768006,13.2993793,52.5764251,13.3001947,52.5753736,13.3023727,52.5749338,13.3031988,52.5745368,13.3037996,52.5743973,13.303982,52.5740325,13.3044004,52.5736248,13.3047652,52.5732815,13.3050442,52.5731099,13.30513,52.5725949,13.3053339,52.5721443,13.3054411,52.5714147,13.3055484,52.5704169,13.3055055,52.5698805,13.3054948,52.5695372,13.3055055,52.5692046,13.3055592,52.5689578,13.3055806,52.5687325,13.305645,52.5684428,13.3057952,52.5681853,13.3059025,52.5677776,13.3061385,52.5675631,13.3062994,52.5671017,13.3068037,52.5668335,13.3071256,52.566576,13.3074689,52.56634,13.3078551,52.5659966,13.3084881,52.5658035,13.3089495,52.5655246,13.3097112,52.5652349,13.310709,52.5639153,13.315537,52.5635934,13.316642,52.5633252,13.3176398,52.5628746,13.3191526,52.5625527,13.3200967,52.5622952,13.3207834,52.5621128,13.3211696,52.5620055,13.3213305,52.5618875,13.32147,52.5617695,13.3215773,52.5616407,13.3216631,52.5614583,13.3216953,52.5613296,13.3216953,52.560879,13.321631,52.5607288,13.3216631,52.5605571,13.3217168,52.5604391,13.3218563,52.5606,13.3231544,52.5608146,13.3244956,52.5609112,13.3248281,52.5610507,13.3252037,52.5612438,13.3256328,52.5615978,13.3261049,52.5617158,13.3262229,52.5619304,13.3263731,52.562263,13.3265555,52.5625527,13.3267164,52.5624561,13.3269954,52.5622952,13.3298707,52.5623059,13.3301389,52.5623381,13.3302677,52.5624239,13.3304822,52.5624776,13.3305895,52.561909,13.3316517,52.5617373,13.3319628,52.5601065,13.3348167,52.5533581,13.3468008,52.5520062,13.3491611,52.5508153,13.3511674,52.5505257,13.3517146,52.5504398,13.3518648,52.5503433,13.3521116,52.5504076,13.3522618,52.5518024,13.3549225,52.5525105,13.3563602,52.5551498,13.3613706,52.556684,13.3643854,52.5567484,13.3646321,52.5568128,13.3655012,52.5569952,13.3674753,52.5570166,13.3680117,52.5569415,13.3692133,52.5566733,13.3725178,52.5565553,13.3738911,52.5562334,13.3742666,52.5538087,13.3770132,52.5536799,13.3771849,52.5534332,13.3776248,52.5532079,13.3780646,52.5530469,13.3784616,52.5528967,13.379159,52.5528216,13.3796847,52.5527143,13.3802104,52.5518239,13.3824205,52.5516307,13.382839,52.5514913,13.3831072,52.5506008,13.3845878,52.5496566,13.3860791,52.5489807,13.3873022,52.5487447,13.3877099,52.5486052,13.3879137,52.5482512,13.3882248,52.5436163,13.3917868,52.5425649,13.3926451,52.5416422,13.393321,52.5411057,13.3936858,52.5401294,13.3945334,52.5395393,13.3949947,52.5391531,13.3952737,52.5382626,13.3959281,52.5382948,13.3960783,52.5385308,13.397001,52.5395393,13.4005308,52.5398183,13.401593,52.5403333,13.4033203,52.54058,13.4042966,52.5406337,13.4045327,52.5412667,13.4079123,52.5413311,13.4083736,52.5413311,13.4086525,52.5410521,13.4119463,52.5410092,13.4123647,52.5409126,13.4131157,52.5408375,13.413384,52.540741,13.4139526,52.5405586,13.4147894,52.5397325,13.4201968,52.5394857,13.4215808,52.5381875,13.4201431,52.5380544,13.4205039];
	routeArr2 = [52.5768541,13.3477983,52.57532,13.3476913,52.5744188,13.3476055,52.57429,13.3477235,52.5742257,13.3480346,52.5738609,13.3504701,52.5737,13.3518648,52.5733244,13.356725,52.5732708,13.3587742,52.5732279,13.3590317,52.5731313,13.3592355,52.573024,13.359375,52.5729382,13.3594394,52.5722408,13.3598149,52.5716293,13.3601153,52.5705779,13.3606625,52.5696981,13.3611453,52.5678527,13.3621216,52.5672734,13.3624113,52.5662434,13.3629692,52.5643659,13.363924,52.5637758,13.3641601,52.5635719,13.3642352,52.5626493,13.3643961,52.5624132,13.3644712,52.5613189,13.364675,52.5600421,13.3648896,52.5583899,13.3652222,52.5580251,13.3652759,52.5571024,13.3654583,52.5568128,13.3655012,52.5568449,13.3657265,52.5569952,13.3674753,52.5570166,13.3680117,52.5569952,13.3684087,52.5567591,13.3715737,52.5566733,13.3725178,52.5565553,13.3738911,52.5562334,13.3742666,52.5538087,13.3770132,52.5536799,13.3771849,52.5536048,13.3773136,52.5532079,13.3780646,52.5530469,13.3784616,52.5528967,13.379159,52.5528216,13.3796847,52.5527143,13.3802104,52.5518239,13.3824205,52.5516307,13.382839,52.5514913,13.3831072,52.5506008,13.3845878,52.5496566,13.3860791,52.5489807,13.3873022,52.5487447,13.3877099,52.5486052,13.3879137,52.5482512,13.3882248,52.5454067,13.3904074,52.5436163,13.3917868,52.5425649,13.3926451,52.5416422,13.393321,52.5411057,13.3936858,52.5401294,13.3945334,52.5395393,13.3949947,52.5391531,13.3952737,52.5382626,13.3959281,52.5382948,13.3960783,52.5385308,13.397001,52.5395393,13.4005308,52.5398183,13.401593,52.5403333,13.4033203,52.54058,13.4042966,52.5406337,13.4045327,52.5412667,13.4079123,52.5413311,13.4083736,52.5413311,13.4086525,52.5410521,13.4119463,52.5410092,13.4123647,52.5409649,13.4127065,52.5409126,13.4131157,52.5408375,13.413384,52.540741,13.4139526,52.5405586,13.4147894,52.5397325,13.4201968,52.5394857,13.4215808,52.5393033,13.4228253,52.5390351,13.4242952,52.5384879,13.4258187,52.5384557,13.4259367,52.538445,13.4260547,52.538327,13.4263551,52.5381231,13.4269989,52.5371039,13.4299707,52.5361276,13.4327495,52.5360096,13.4330606,52.5362349,13.4333074,52.5366211,13.4337795,52.5381768,13.4355927,52.5396252,13.4372556,52.5405478,13.4383821,52.5411272,13.4390581,52.5423717,13.4404635,52.5430799,13.4413111,52.5443244,13.4427381,52.5447428,13.4434032,52.5449572,13.4437893,52.5453222,13.4445405,52.5456548,13.4452701,52.5458694,13.4456992,52.5462341,13.4465146,52.5464058,13.4469652,52.5473607,13.4490359,52.548058,13.4505916,52.5481868,13.4509242,52.5482833,13.4512246,52.5483906,13.4516752,52.5486159,13.4527588,52.5490022,13.4544861,52.5490773,13.4549046,52.5498497,13.4584236,52.5500751,13.4589386,52.5504935,13.4607196,52.5509334,13.4627581,52.5509441,13.4631443,52.5509977,13.4633696,52.5512767,13.4641635,52.5521779,13.4660947,52.5524569,13.4665668,52.5527251,13.4669101,52.5528324,13.4670174,52.5530148,13.4671462,52.5536478,13.4674895,52.5538301,13.4675753,52.5537336,13.4685624,52.5536048,13.4702575,52.5533152,13.4751713,52.5532508,13.4774137,52.553165,13.4791946,52.5529289,13.4788835,52.5526929,13.4785187,52.5522101,13.477875,52.551384,13.476845,52.5506651,13.4759545,52.5500751,13.4753001,52.5494206,13.4744096,52.5483048,13.4730148,52.5480795,13.4726715,52.5479186,13.4723711,52.5476825,13.4718239,52.5474679,13.4712231,52.5472748,13.4706223,52.5471246,13.4700215,52.5467491,13.4679401,52.5466955,13.4676611,52.5454724,13.4681439,52.5436914,13.4687877,52.5430584,13.4690344,52.5405264,13.4699571,52.5403333,13.4700322,52.5401402,13.4701288,52.5393355,13.4706652,52.538445,13.4712982,52.5380266,13.4715772,52.5378656,13.4717059,52.5362992,13.4731972,52.535001,13.4743452,52.534765,13.4745705,52.5344324,13.4748602,52.5330591,13.4759653,52.5329304,13.4760725,52.532984,13.4764588,52.5330698,13.477596,52.5334346,13.4837544,52.5334883,13.4849453,52.5340784,13.4947085,52.534132,13.4964788,52.5341642,13.4985816,52.5342071,13.4997296,52.5339067,13.4998047,52.5331342,13.4999228,52.5324583,13.4999657,52.5317287,13.5000837,52.5315249,13.5000944,52.5311708,13.5000837,52.5274694,13.4998477,52.5263429,13.4998047,52.5246669,13.4996911,52.5216436,13.4994936,52.5204206,13.499397,52.5192189,13.4993434,52.518146,13.4992468,52.5167513,13.4988928,52.5160539,13.4986889,52.5156999,13.4985924,52.515775,13.4978414,52.5162041,13.4934747,52.5163007,13.492434,52.5161505,13.4922087,52.5151849,13.4906852,52.515099,13.4905672,52.5149596,13.490417,52.5145948,13.4902561,52.5144231,13.4902024,52.5141335,13.4901166,52.5134897,13.4900093,52.5122452,13.4897089,52.512095,13.489666,52.5118053,13.4922945,52.5114191,13.4970582,52.5111616,13.4997833,52.5107753,13.5030448,52.5106251,13.5047615,52.5105286,13.504622,52.5097024,13.5034955,52.5095308,13.5040426,52.5087047,13.5033774,52.5069773,13.5019934,52.5050676,13.5004056,52.5029969,13.4987533,52.5007546,13.4968865,52.5006795,13.4969079,52.5006258,13.4967685,52.5005615,13.4966397,52.5004649,13.4965324,52.5001752,13.4962857,52.4999177,13.4970796,52.499392,13.4986889,52.4991916,13.4993002,52.4989951,13.4999013,52.4971068,13.4989893,52.4972355,13.4982276,52.4972034,13.4981203,52.4971497,13.4980774,52.4966455,13.4978199,52.49686,13.4967148,52.4969137,13.4966397,52.4969673,13.4966397,52.4982119,13.4972298,52.4996388,13.4979165,52.4999177,13.4970796,52.5001752,13.4962857,52.5003362,13.4957063,52.5005937,13.4947944,52.5013661,13.4910071,52.5015593,13.4903097,52.5018704,13.4893548,52.5020742,13.4886146,52.5024283,13.4871447,52.5024498,13.486973,52.5024498,13.4867907,52.5022459,13.4866726,52.5021279,13.4865654,52.5020206,13.4864044,52.5003362,13.4830248,52.5003147,13.4828639,52.4997139,13.4816515,52.4995852,13.4814048,52.4994671,13.4812438,52.4991667,13.4806752,52.4990594,13.4805036,52.4983728,13.4820378,52.4968278,13.485353,52.4960339,13.4871125,52.4956906,13.4877777,52.495358,13.4881747,52.4943495,13.4892261,52.4922895,13.4914362,52.4908304,13.4929919,52.4889743,13.4949231,52.4879014,13.4960067,52.486614,13.49738,52.4856591,13.4983456,52.4842322,13.4998369,52.4828598,13.5013794,52.4825799,13.5017252,52.4825048,13.5017788,52.4823976,13.5018539,52.4805307,13.5028303,52.4801338,13.5029161,52.480005,13.5029697,52.4795973,13.503195,52.4789751,13.5036242,52.478106,13.504107,52.4779773,13.504225,52.477237,13.5050082,52.475574,13.5068429,52.4728918,13.5097396,52.4720013,13.5107267,52.4711537,13.5116816,52.4689865,13.5140741,52.4687827,13.514353,52.4687183,13.5144496,52.4686539,13.5145783,52.4686861,13.5146642,52.4692118,13.515383,52.4694157,13.5156512,52.4695873,13.5158443,52.472012,13.5183978,52.4726343,13.5189235,52.4729133,13.5192132,52.4751985,13.5216165,52.4777305,13.5243309,52.4780095,13.524524,52.4802411,13.5252321,52.4807243,13.5252611];

	for(i = 0; i < routeArr.length; i += 2)
	{
		strip.pushPoint(new H.geo.Point(routeArr[i], routeArr[i+1]));
	}

	for(i = 0; i < routeArr2.length; i += 2)
	{
		strip2.pushPoint(new H.geo.Point(routeArr2[i], routeArr2[i+1]));
	}

	var polyline = new H.map.Polyline(strip,
		{
			style:
			{
				lineWidth: 8,
				strokeColor: "rgba(0,0,0,0.4)"
			}
		});

		map.addObject(polyline);

		var circle = new H.map.Circle({lat: 52.55535, lng: 13.37716}, 500);
		circle.$id= "fence";
		map.addObject(circle);

		var polystrip = new H.geo.LineString();

		polystrip.pushPoint(new H.geo.Point(52.550414023424274,13.413092803955067));
		polystrip.pushPoint(new H.geo.Point(52.551144684019846,13.403651428222645));
		polystrip.pushPoint(new H.geo.Point(52.54968335066331,13.388373565673817));
		polystrip.pushPoint(new H.geo.Point(52.54832635468847,13.383738708496082));
		polystrip.pushPoint(new H.geo.Point(52.54509027188299,13.379275512695301));
		polystrip.pushPoint(new H.geo.Point(52.54268915303553,13.382708740234364));
		polystrip.pushPoint(new H.geo.Point(52.54488148415378,13.390261840820301));
		polystrip.pushPoint(new H.geo.Point(52.546134195631865,13.395068359374989));
		polystrip.pushPoint(new H.geo.Point(52.546969316754534,13.401419830322254));
		polystrip.pushPoint(new H.geo.Point(52.547700034702096,13.412921142578114));
		polystrip.pushPoint(new H.geo.Point(52.547700034702096,13.412921142578114));

		var polygon = new H.map.Polygon(
			polystrip, {
				style: {
					strokeColor: "#f00",
					lineWidth: 1
				}
			}
		);
		map.addObject(polygon);

		var isolineArr = [52.4856606,13.4983501,52.4857292,13.4985399,52.4857292,13.4985399,52.4835205,13.5022898,52.4835205,13.5022898,52.4839287,13.5039196,52.4839287,13.5039196,52.4843407,13.5057602,52.4843407,13.5057602,52.4843407,13.5103798,52.4843407,13.5103798,52.4850883,13.5116596,52.4850883,13.5116596,52.4884911,13.5151796,52.4884911,13.5151796,52.4903183,13.5109797,52.4903183,13.5109797,52.4902992,13.5086699,52.4902992,13.5086699,52.4914284,13.5057898,52.4914284,13.5057898,52.4929695,13.5020103,52.4929695,13.5020103,52.4942093,13.5047503,52.4942093,13.5047503,52.4979591,13.5031004,52.4979591,13.5031004,52.4986496,13.5077801,52.4986496,13.5077801,52.4974213,13.5100803,52.4974213,13.5100803,52.4966087,13.5109596,52.4966087,13.5109596,52.4956894,13.5134697,52.4956894,13.5134697,52.4986382,13.5169096,52.4986382,13.5169096,52.5025787,13.5177202,52.5025787,13.5177202,52.5070305,13.5196199,52.5070305,13.5196199,52.5081787,13.5193195,52.5081787,13.5193195,52.5088196,13.5192604,52.5088196,13.5192604,52.50951,13.5191898,52.50951,13.5191898,52.5094604,13.5201502,52.5094604,13.5201502,52.5069008,13.52279,52.5069008,13.52279,52.5023994,13.5232697,52.5023994,13.5232697,52.5013504,13.5238199,52.5013504,13.5238199,52.5004807,13.5242004,52.5004807,13.5242004,52.5001717,13.5242996,52.5001717,13.5242996,52.4961395,13.5245504,52.4961395,13.5245504,52.4949799,13.5288401,52.4949799,13.5288401,52.4958801,13.5318098,52.4958801,13.5318098,52.4927292,13.5349197,52.4927292,13.5349197,52.494751,13.5369797,52.494751,13.5369797,52.4946709,13.5380201,52.4946709,13.5380201,52.4945488,13.5399799,52.4945488,13.5399799,52.4932709,13.5422697,52.4932709,13.5422697,52.4891701,13.5423603,52.4891701,13.5423603,52.4846382,13.5439997,52.4846382,13.5439997,52.4847717,13.5452003,52.4847717,13.5452003,52.4832497,13.5397701,52.4832497,13.5397701,52.4799194,13.5427303,52.4799194,13.5427303,52.4755096,13.5424299,52.4755096,13.5424299,52.4743118,13.5445995,52.4743118,13.5445995,52.4742393,13.5451698,52.4742393,13.5451698,52.4741402,13.54597,52.4741402,13.54597,52.4738693,13.5481195,52.4738693,13.5481195,52.4728889,13.5485802,52.4728889,13.5485802,52.4750099,13.5417404,52.4750099,13.5417404,52.4761391,13.5391302,52.4761391,13.5391302,52.4737015,13.5366297,52.4737015,13.5366297,52.4733009,13.5358105,52.4733009,13.5358105,52.4719315,13.5334902,52.4719315,13.5334902,52.4724884,13.5328798,52.4724884,13.5328798,52.4734192,13.5321503,52.4734192,13.5321503,52.4755287,13.53022,52.4755287,13.53022,52.4766693,13.52913,52.4766693,13.52913,52.4772797,13.5286303,52.4772797,13.5286303,52.4785385,13.5246897,52.4785385,13.5246897,52.4767113,13.5232296,52.4767113,13.5232296,52.4752007,13.5216198,52.4752007,13.5216198,52.4743996,13.5207901,52.4743996,13.5207901,52.4740486,13.5204201,52.4740486,13.5204201,52.4724388,13.5187597,52.4724388,13.5187597,52.4712715,13.5176201,52.4712715,13.5176201,52.4672699,13.5194998,52.4672699,13.5194998,52.4665184,13.5216599,52.4665184,13.5216599,52.4655609,13.5237999,52.4655609,13.5237999,52.4654808,13.5239697,52.4654808,13.5239697,52.4642715,13.5287399,52.4642715,13.5287399,52.4618111,13.5325003,52.4618111,13.5325003,52.4614792,13.5328703,52.4614792,13.5328703,52.4612999,13.5317001,52.4612999,13.5317001,52.4635391,13.5281,52.4635391,13.5281,52.4630013,13.5238504,52.4630013,13.5238504,52.4628181,13.52108,52.4628181,13.52108,52.4617882,13.5169001,52.4617882,13.5169001,52.4624405,13.5140696,52.4624405,13.5140696,52.4628487,13.5121899,52.4628487,13.5121899,52.4636192,13.5088501,52.4636192,13.5088501,52.4620094,13.5061102,52.4620094,13.5061102,52.4616013,13.5054998,52.4616013,13.5054998,52.4614716,13.50529,52.4614716,13.50529,52.4609718,13.50422,52.4609718,13.50422,52.4607086,13.50354,52.4607086,13.50354,52.4605293,13.5023899,52.4605293,13.5023899,52.4608688,13.5018301,52.4608688,13.5018301,52.4614716,13.5027304,52.4614716,13.5027304,52.4651413,13.5055103,52.4651413,13.5055103,52.4658699,13.5048904,52.4658699,13.5048904,52.4676285,13.5033998,52.4676285,13.5033998,52.4689407,13.5041399,52.4689407,13.5041399,52.4735603,13.5042295,52.4735603,13.5042295,52.4738808,13.5005798,52.4738808,13.5005798,52.4739189,13.5008698,52.4739189,13.5008698,52.4742317,13.5029001,52.4742317,13.5029001,52.4776993,13.5045099,52.4776993,13.5045099,52.4807014,13.5012302,52.4807014,13.5012302,52.4831085,13.50109,52.4831085,13.50109,52.4856606,13.4983501];

		for(i = 0; i < isolineArr.length; i += 2)
		{
			isoStrip.pushPoint(new H.geo.Point(isolineArr[i], isolineArr[i+1]));
		}

		var isoline = new H.map.Polygon(
			isoStrip, {
				style: {
					strokeColor: "#f00",
					lineWidth: 1
				}
			}
		);
		map.addObject(isoline);

		var icon = new H.map.Icon('/assets/icons/markerTruck.png');
		var imageMarker = new H.map.Marker({ lat: 52.53805, lng: 13.4205 }, { icon: icon });
		imageMarker.$id = "marker";
		map.addObject(imageMarker);

		var displayReady = function(e)
		{
			map.removeEventListener("mapviewchangeend", displayReady);
			startWalking();
		};

		map.addEventListener("mapviewchangeend", displayReady);

		var startWalking = function()
		{
			var walker = new Walker(imageMarker, strip2/*polyline.getStrip()*/);
			walker.walk();
		}

		var Walker = function (marker, path) {
			this.path = path;
			this.marker = marker;
			this.idx = 0;
			this.dir = -1;
			this.isWalking = false;
			var that = this;
			this.walk = function () {
				// Get the next coordinate from the route and set the marker to this coordinate
				var coord = path.extractPoint(that.idx);

				marker.setGeometry(coord);

				// If we get to the end of the route reverse direction
				if (!that.idx || that.idx === path.getPointCount() - 1) {
					that.dir *= -1;
				}

				that.idx += that.dir;

				/* Recursively call this function with time that depends on the distance to the next point
				* which makes the marker move in similar random fashion
				*/
				// that.timeout = setTimeout(that.walk, Math.round(coord.distance(path.extractPoint(that.idx)) * 2.5));
				that.timeout = setTimeout(that.walk, 200);
				that.isWalking = true;
				var pixelcoord  = map.geoToScreen(coord),
				covers = false,
                log = document.getElementById("log");

                map.getObjectsAt(pixelcoord.x, pixelcoord.y, function(objects){
                    for (var object in objects) {
                        if (objects[object] === this.circle)
                        {
                            log.innerHTML += "Object is in circle geofence <br>";
                            this.circle.setStyle({fillColor: 'rgba(255, 0, 0, 0.5'});
                            covers = true;
                        }
                        else if(objects[object] === this.polyline)
                        {
                            log.innerHTML += "Object is in route geofence <br>";
                            this.polyline.setStyle({strokeColor: 'rgba(255, 0, 0, 0.5', lineWidth: 8});
                            covers = true;
                        }
                        else if(objects[object] === this.polygon)
                        {
                            log.innerHTML += "Object is in polygon geofence <br>";
                            this.polygon.setStyle({strokeColor: 'rgba(255, 0, 0, 0.5', lineWidth: 8});
                            covers = true;
                        }
                        else if(objects[object] === this.isoline)
                        {
                            log.innerHTML += "Object is in isoline geofence <br>";
                            this.isoline.setStyle({strokeColor: 'rgba(255, 0, 0, 0.5', lineWidth: 8});
                            covers = true;
                        }
                        if(covers)
                            break;
                    }
                    if(!covers && (this.circle !== undefined || this.polyline !== undefined || this.isoline !== undefined || this.polygon !== undefined))
                    {
                        log.innerHTML += "Object is not in geofence <br>";
                        this.circle.setStyle({fillColor: 'rgba(255, 255, 255, 0.5'});
                        this.polyline.setStyle({strokeColor: 'rgba(0,0,0,0.4)', lineWidth: 8});
                        this.polygon.setStyle({strokeColor: "#f00", lineWidth: 1});
                        this.isoline.setStyle({strokeColor: "#f00", lineWidth: 1});
                    }

                    log.scrollTop = log.scrollHeight;
                    });
			};

			this.stop = function () {
				clearTimeout(that.timeout);
				this.isWalking = false;
			};
		};